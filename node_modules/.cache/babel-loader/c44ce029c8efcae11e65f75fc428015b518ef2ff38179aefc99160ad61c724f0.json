{"ast":null,"code":"import axios from 'axios'; // Ensure axios is used\nimport { Configuration } from 'openai'; // Removed unused OpenAIApi import\n\nrequire('dotenv').config(); // Ensure .env variables are loaded\n\nexport async function sendMsgToOpenAI(message) {\n  try {\n    const apiKey = process.env.OPENAI_API_KEY;\n    if (!apiKey) {\n      throw new Error('OPENAI_API_KEY is not defined in environment variables.');\n    }\n    const response = await axios.post('https://api.openai.com/v1/completions', {\n      model: 'text-davinci-003',\n      prompt: message,\n      temperature: 0.7,\n      max_tokens: 100\n    }, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Response:', response.data);\n    return response.data.choices[0].text.trim();\n  } catch (error) {\n    var _error$response;\n    console.error('Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","Configuration","require","config","sendMsgToOpenAI","message","apiKey","process","env","OPENAI_API_KEY","Error","response","post","model","prompt","temperature","max_tokens","headers","Authorization","console","log","data","choices","text","trim","error","_error$response"],"sources":["C:/Users/ksima/Downloads/NexGenAI/src/openai.js"],"sourcesContent":["import axios from 'axios'; // Ensure axios is used\r\nimport { Configuration } from 'openai'; // Removed unused OpenAIApi import\r\n\r\nrequire('dotenv').config(); // Ensure .env variables are loaded\r\n\r\nexport async function sendMsgToOpenAI(message) {\r\n    try {\r\n        const apiKey = process.env.OPENAI_API_KEY;\r\n        if (!apiKey) {\r\n            throw new Error('OPENAI_API_KEY is not defined in environment variables.');\r\n        }\r\n\r\n        const response = await axios.post(\r\n            'https://api.openai.com/v1/completions',\r\n            {\r\n                model: 'text-davinci-003',\r\n                prompt: message,\r\n                temperature: 0.7,\r\n                max_tokens: 100,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${apiKey}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n\r\n        console.log('Response:', response.data);\r\n        return response.data.choices[0].text.trim();\r\n    } catch (error) {\r\n        console.error('Error:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,aAAa,QAAQ,QAAQ,CAAC,CAAC;;AAExCC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAE5B,OAAO,eAAeC,eAAeA,CAACC,OAAO,EAAE;EAC3C,IAAI;IACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,cAAc;IACzC,IAAI,CAACH,MAAM,EAAE;MACT,MAAM,IAAII,KAAK,CAAC,yDAAyD,CAAC;IAC9E;IAEA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC7B,uCAAuC,EACvC;MACIC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAET,OAAO;MACfU,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE;IAChB,CAAC,EACD;MACIC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASZ,MAAO,EAAC;QACjC,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IAEDa,OAAO,CAACC,GAAG,CAAC,WAAW,EAAET,QAAQ,CAACU,IAAI,CAAC;IACvC,OAAOV,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZP,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACd,QAAQ,cAAAe,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACpB,OAAO,CAAC;IAC9D,MAAMoB,KAAK;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}