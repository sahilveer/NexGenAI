{"ast":null,"code":"import axios from 'axios';\nimport { Configuration, OpenAIApi } from 'openai';\n\n// It's a good practice to store your API keys in environment variables\nconst apiKey = process.env.OPENAI_API_KEY; // Ensure you set this in your environment\nconst configuration = new Configuration({\n  apiKey\n});\nconst openai = new OpenAIApi(configuration);\nexport async function sendMsgToOpenAI(message) {\n  try {\n    const response = await openai.createCompletion({\n      model: 'text-davinci-003',\n      prompt: message,\n      temperature: 0.7,\n      max_tokens: 256,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n\n    // Return the response from OpenAI\n    const openAIResponse = response.data.choices[0].text;\n\n    // If you need to make an Axios call, do it here\n    try {\n      const apiResponse = await axios.get('https://api.example.com/data', {\n        headers: {\n          Authorization: `Bearer OPENAI_API_KEY`\n        }\n      });\n      console.log(apiResponse.data); // Log or handle the response as needed\n    } catch (error) {\n      console.error('Error fetching data from the external API:', error);\n    }\n    return openAIResponse;\n  } catch (error) {\n    console.error('Error communicating with OpenAI:', error);\n    throw error; // Rethrow the error if you want to handle it upstream\n  }\n}","map":{"version":3,"names":["axios","Configuration","OpenAIApi","apiKey","process","env","OPENAI_API_KEY","configuration","openai","sendMsgToOpenAI","message","response","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","openAIResponse","data","choices","text","apiResponse","get","headers","Authorization","console","log","error"],"sources":["C:/Users/ksima/Downloads/NexGenAI/src/openai.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Configuration, OpenAIApi } from 'openai';\r\n\r\n// It's a good practice to store your API keys in environment variables\r\nconst apiKey = process.env.OPENAI_API_KEY; // Ensure you set this in your environment\r\nconst configuration = new Configuration({ apiKey });\r\nconst openai = new OpenAIApi(configuration);\r\n\r\nexport async function sendMsgToOpenAI(message) {\r\n    try {\r\n        const response = await openai.createCompletion({\r\n            model: 'text-davinci-003',\r\n            prompt: message,\r\n            temperature: 0.7,\r\n            max_tokens: 256,\r\n            top_p: 1,\r\n            frequency_penalty: 0,\r\n            presence_penalty: 0\r\n        });\r\n\r\n        // Return the response from OpenAI\r\n        const openAIResponse = response.data.choices[0].text;\r\n\r\n        // If you need to make an Axios call, do it here\r\n        try {\r\n            const apiResponse = await axios.get('https://api.example.com/data', {\r\n                headers: {\r\n                    Authorization: `Bearer OPENAI_API_KEY`\r\n                }\r\n            });\r\n            console.log(apiResponse.data); // Log or handle the response as needed\r\n        } catch (error) {\r\n            console.error('Error fetching data from the external API:', error);\r\n        }\r\n\r\n        return openAIResponse;\r\n    } catch (error) {\r\n        console.error('Error communicating with OpenAI:', error);\r\n        throw error; // Rethrow the error if you want to handle it upstream\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;;AAEjD;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,CAAC;AAC3C,MAAMC,aAAa,GAAG,IAAIN,aAAa,CAAC;EAAEE;AAAO,CAAC,CAAC;AACnD,MAAMK,MAAM,GAAG,IAAIN,SAAS,CAACK,aAAa,CAAC;AAE3C,OAAO,eAAeE,eAAeA,CAACC,OAAO,EAAE;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,gBAAgB,CAAC;MAC3CC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAEJ,OAAO;MACfK,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,GAAG;MACfC,KAAK,EAAE,CAAC;MACRC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACtB,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAGT,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;;IAEpD;IACA,IAAI;MACA,MAAMC,WAAW,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,8BAA8B,EAAE;QAChEC,OAAO,EAAE;UACLC,aAAa,EAAG;QACpB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACL,WAAW,CAACH,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IACtE;IAEA,OAAOV,cAAc;EACzB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}