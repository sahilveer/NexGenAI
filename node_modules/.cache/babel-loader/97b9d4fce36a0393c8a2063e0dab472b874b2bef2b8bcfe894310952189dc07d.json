{"ast":null,"code":"const {\n  Configuration,\n  OpenAIApi\n} = require('openai');\nconst apiKey = \"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\";\nconst configuration = new Configuration({\n  apiKey\n});\nconst openai = new OpenAIApi(configuration);\nexport async function sendMsgToOpenAI(message) {\n  const response = await openai.createCompletion({\n    model: 'text-davinci-003',\n    prompt: message,\n    temperature: 0.7,\n    max_tokens: 256,\n    top_p: 1,\n    frequency_penalty: 0,\n    presence_penalty: 0\n  });\n  return response.data.choices[0].text;\n}","map":{"version":3,"names":["Configuration","OpenAIApi","require","apiKey","configuration","openai","sendMsgToOpenAI","message","response","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","data","choices","text"],"sources":["C:/Users/ksima/Downloads/NexGenAI/src/openai.js"],"sourcesContent":["const { Configuration, OpenAIApi } = require('openai');\r\nconst apiKey = \"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\";\r\nconst configuration = new Configuration({ apiKey });\r\nconst openai = new OpenAIApi(configuration);\r\n\r\nexport async function sendMsgToOpenAI(message) {\r\n    const response = await openai.createCompletion({\r\n        model: 'text-davinci-003',\r\n        prompt: message,\r\n        temperature: 0.7,\r\n        max_tokens: 256,\r\n        top_p: 1,\r\n        frequency_penalty: 0,\r\n        presence_penalty: 0\r\n    });\r\n    return response.data.choices[0].text;\r\n}\r\n"],"mappings":"AAAA,MAAM;EAAEA,aAAa;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtD,MAAMC,MAAM,GAAG,qDAAqD;AACpE,MAAMC,aAAa,GAAG,IAAIJ,aAAa,CAAC;EAAEG;AAAO,CAAC,CAAC;AACnD,MAAME,MAAM,GAAG,IAAIJ,SAAS,CAACG,aAAa,CAAC;AAE3C,OAAO,eAAeE,eAAeA,CAACC,OAAO,EAAE;EAC3C,MAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,gBAAgB,CAAC;IAC3CC,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAEJ,OAAO;IACfK,WAAW,EAAE,GAAG;IAChBC,UAAU,EAAE,GAAG;IACfC,KAAK,EAAE,CAAC;IACRC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EACF,OAAOR,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;AACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}