{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksima\\\\Downloads\\\\NexGenAI\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { sendMsgToOpenAI } from './openai';\n\n// Importing SVG as React Components\nimport { ReactComponent as GptLogo } from './assets/NexGen.svg'; // ReactComponent allows SVG as a component\nimport { ReactComponent as MsgIcon } from './assets/message.svg';\nimport { ReactComponent as HomeIcon } from './assets/home.svg';\nimport { ReactComponent as SavedIcon } from './assets/bookmark.svg';\nimport { ReactComponent as RocketIcon } from './assets/rocket.svg';\nimport { ReactComponent as SendIcon } from './assets/send.svg';\n\n// Importing other assets\nimport addBtn from './assets/add-30.png';\nimport userIcon from './assets/user-icon.png';\nimport gptImgLogo from './assets/chatgptLogo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const msgEnd = useRef(null);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    text: \"Hi, I am NexGen, a state-of-the-art language model developed by OpenAI. I'm designed to understand and generate human-like text based on the input I receive. You can ask me questions, have conversations, seek information, or even request assistance with various tasks. Just let me know how I can help you!\",\n    isBot: true\n  }]);\n  useEffect(() => {\n    msgEnd.current.scrollIntoView();\n  }, [messages]);\n  const handleSend = async () => {\n    const text = input;\n    setInput('');\n    setMessages([...messages, {\n      text,\n      isBot: false\n    }]);\n    const res = await sendMsgToOpenAI(text);\n    setMessages([...messages, {\n      text,\n      isBot: false\n    }, {\n      text: res,\n      isBot: true\n    }]);\n  };\n  const handleEnter = async e => {\n    if (e.key === 'Enter') await handleSend();\n  };\n  const handleQuery = async e => {\n    const text = e.target.value;\n    setMessages([...messages, {\n      text,\n      isBot: false\n    }]);\n    const res = await sendMsgToOpenAI(text);\n    setMessages([...messages, {\n      text,\n      isBot: false\n    }, {\n      text: res,\n      isBot: true\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upperSide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperSideTop\",\n          children: [/*#__PURE__*/_jsxDEV(GptLogo, {\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brand\",\n            children: \"NexGen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"midBtn\",\n          onClick: () => {\n            window.location.reload();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: addBtn,\n            alt: \"new chat\",\n            className: \"addBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), \"New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperSideBottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"query\",\n            onClick: handleQuery,\n            value: \"What is Programming ?\",\n            children: [/*#__PURE__*/_jsxDEV(MsgIcon, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), \"What is Programming ?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"query\",\n            onClick: handleQuery,\n            value: \"How to use an API ?\",\n            children: [/*#__PURE__*/_jsxDEV(MsgIcon, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), \"How to use an API ?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lowerSide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listItems\",\n          children: [/*#__PURE__*/_jsxDEV(HomeIcon, {\n            className: \"listItemsImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), \"Home\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listItems\",\n          children: [/*#__PURE__*/_jsxDEV(SavedIcon, {\n            className: \"listItemsImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), \"Saved\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listItems\",\n          children: [/*#__PURE__*/_jsxDEV(RocketIcon, {\n            className: \"listItemsImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), \"Upgrade to Pro\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats\",\n        children: [messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: message.isBot ? \"chat bot\" : \"chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"chatImg\",\n            src: message.isBot ? gptImgLogo : userIcon,\n            alt: \"ChatGPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"txt\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: msgEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatFooter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Send a message\",\n            value: input,\n            onKeyDown: handleEnter,\n            onChange: e => {\n              setInput(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"NexGen may produce inaccurate information about people, places, or facts. NexGen November 24 Version.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"rs7P1ReL1+5cACXdlVmLwKRpbfE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","sendMsgToOpenAI","ReactComponent","GptLogo","MsgIcon","HomeIcon","SavedIcon","RocketIcon","SendIcon","addBtn","userIcon","gptImgLogo","jsxDEV","_jsxDEV","App","_s","msgEnd","input","setInput","messages","setMessages","text","isBot","current","scrollIntoView","handleSend","res","handleEnter","e","key","handleQuery","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","src","alt","map","message","i","ref","type","placeholder","onKeyDown","onChange","_c","$RefreshReg$"],"sources":["C:/Users/ksima/Downloads/NexGenAI/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport { sendMsgToOpenAI } from './openai';\n\n// Importing SVG as React Components\nimport { ReactComponent as GptLogo } from './assets/NexGen.svg';  // ReactComponent allows SVG as a component\nimport { ReactComponent as MsgIcon } from './assets/message.svg';\nimport { ReactComponent as HomeIcon } from './assets/home.svg';\nimport { ReactComponent as SavedIcon } from './assets/bookmark.svg';\nimport { ReactComponent as RocketIcon } from './assets/rocket.svg';\nimport { ReactComponent as SendIcon } from './assets/send.svg';\n\n// Importing other assets\nimport addBtn from './assets/add-30.png';\nimport userIcon from './assets/user-icon.png';\nimport gptImgLogo from './assets/chatgptLogo.svg';\n\nfunction App() {\n    const msgEnd = useRef(null);\n\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([\n        {\n            text: \"Hi, I am NexGen, a state-of-the-art language model developed by OpenAI. I'm designed to understand and generate human-like text based on the input I receive. You can ask me questions, have conversations, seek information, or even request assistance with various tasks. Just let me know how I can help you!\",\n            isBot: true,\n        }\n    ]);\n\n    useEffect(() => {\n        msgEnd.current.scrollIntoView();\n    }, [messages]);\n\n    const handleSend = async () => {\n        const text = input;\n        setInput('');\n        setMessages([\n            ...messages,\n            { text, isBot: false }\n        ]);\n        const res = await sendMsgToOpenAI(text);\n        setMessages([\n            ...messages,\n            { text, isBot: false },\n            { text: res, isBot: true }\n        ]);\n    }\n\n    const handleEnter = async (e) => {\n        if (e.key === 'Enter') await handleSend();\n    }\n\n    const handleQuery = async (e) => {\n        const text = e.target.value;\n        setMessages([\n            ...messages,\n            { text, isBot: false }\n        ]);\n        const res = await sendMsgToOpenAI(text);\n        setMessages([\n            ...messages,\n            { text, isBot: false },\n            { text: res, isBot: true }\n        ]);\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"sideBar\">\n                <div className=\"upperSide\">\n                    <div className=\"upperSideTop\">\n                        <GptLogo className=\"logo\" />\n                        <span className=\"brand\">NexGen</span>\n                    </div>\n                    <button className=\"midBtn\" onClick={()=>{window.location.reload()}}>\n                        <img src={addBtn} alt=\"new chat\" className=\"addBtn\" />New Chat\n                    </button>\n                    <div className=\"upperSideBottom\">\n                        <button className=\"query\" onClick={handleQuery} value={\"What is Programming ?\"}>\n                            <MsgIcon className=\"icon\" />What is Programming ?\n                        </button>\n                        <button className=\"query\" onClick={handleQuery} value={\"How to use an API ?\"}>\n                            <MsgIcon className=\"icon\" />How to use an API ?\n                        </button>\n                    </div>\n                </div>\n                <div className=\"lowerSide\">\n                    <div className=\"listItems\">\n                        <HomeIcon className=\"listItemsImg\" />Home\n                    </div>\n                    <div className=\"listItems\">\n                        <SavedIcon className=\"listItemsImg\" />Saved\n                    </div>\n                    <div className=\"listItems\">\n                        <RocketIcon className=\"listItemsImg\" />Upgrade to Pro\n                    </div>\n                </div>\n            </div>\n            <div className=\"main\">\n                <div className=\"chats\">\n                    {messages.map((message, i) => \n                        <div key={i} className={message.isBot?\"chat bot\":\"chat\"}>\n                            <img className='chatImg' src={message.isBot?gptImgLogo:userIcon} alt=\"ChatGPT\" />\n                            <p className=\"txt\">{ message.text }</p>\n                        </div>\n                    )}\n                    <div ref={msgEnd} />\n                </div>\n                <div className=\"chatFooter\">\n                    <div className=\"inp\">\n                        <input\n                            type=\"text\"\n                            placeholder='Send a message'\n                            value={input}\n                            onKeyDown={handleEnter}\n                            onChange={(e) => { setInput(e.target.value) }}\n                        />\n                        <button className=\"send\" onClick={handleSend}>\n                            <SendIcon className=\"icon\" />\n                        </button>\n                    </div>\n                    <p>NexGen may produce inaccurate information about people, places, or facts. NexGen November 24 Version.</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}